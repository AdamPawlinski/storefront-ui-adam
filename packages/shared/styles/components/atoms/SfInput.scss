@import "../../helpers";
.sf-input {
  position: relative;
  box-sizing: border-box;
  width: var(--input-width);
  height: var(--input-height);
  min-height: var(
    --input-height,
    calc(
      var(--spacer-base) + var(--spacer-2xs) +
      var(--input-label-font-size, var(--font-lg))
    )
  );
  &__label {
    position: absolute;
    display: var(--input-label-display);
    top: var(--input-label-top, 50%);
    left: var(--input-label-left);
    padding: var(--input-label-padding, 0);
    color: var(--input-label-color, inherit);
    text-transform: underline;
    background: var(--input-label-background);
    transform: var(
      --input-label-transform,
      translate3d(0, calc(var(--input-label-top, 50%) * -1), 0)
    );
    transition: var(
      --input-label-transition,
      all 150ms linear
    );
    @include font(
      --input-label-font,
      var(--font-normal),
      var(--font-base),
      1,
      var(--font-family-secondary)
    );
    &::after {
      content: var(--input-label-required);
      color: var(--input-label-color, var(--c-text));
    }
    &--has-icon {
      padding: var(--input-label-padding, 0 0 0 var(--spacer-base));      
    }    
  }
  &__bar {
    position: relative;
    display: var(--input-bar-display, block);
    &::before,
    &::after {
      position: absolute;
      bottom: 0;
      width: var(--input-bar-width, 0);
      height: 1px;
      background: var(--input-bar-background, var(--c-primary));
      transition: width 150ms linear;
      content: "";
    }
    &::before {
      left: 50%;
    }
    &::after {
      right: 50%;
    }
  }
  &__message {
    min-height: calc(var(--font-xs) * 1.2);
    @include font(
      --input-message-font,
      var(--font-medium),
      var(--font-xs),
      1.2,
      var(--font-family-secondary)
    );
    &--hint {
      color: var(--input-message-hint-color, var(--c-secondary));
      &::before {
        display: var(--input-message-hint-display, inline-block);
        content: var(--input-message-required, "*");
        color: var(--input-message-hint-color);
      }
    }
    &--error {
      color: var(--input-message-error-color, var(--c-danger));
    }
    &--success {
      color: var(--input-message-success-color, var(--c-primary));
    }
  }
  &__wrapper,
  input {
    width: 100%;
    height: 100%;
  }
  &__wrapper {
    position: relative;
    margin: var(--input-margin, 0 0 var(--spacer-xs) 0);
  }
  input {
    display: block;
    box-sizing: border-box;
    padding: var(--input-padding, var(--spacer-sm) 0 var(--spacer-xs) 0);
    @include border(--input-border, 0 0 1px 0, solid, var(--c-light));
    background: var(--input-background);
    color: var(--input-color, var(--c-text));
    @include font(
      --input-font,
      var(--font-normal),
      var(--font-lg),
      1,
      var(--font-family-secondary)
    );
    text-align: var(--input-text-align);
    &:focus {
      & ~ * {
        --icon-color: var(--c-primary);
        --input-password-icon-background: var(--c-primary);
        --input-label-top: 0;        
        --input-label-color: var(--c-primary);
        --input-label-font-size: var(--font-xs);
        --input-bar-width: 50%;
        --input-icon-top: 4px;
        --input-icon-left: 0;
        --icon-size: 12px;  
        .sf-input__label--has-icon {
          --input-label-padding: 0 0 0 var(--spacer-sm);
        }      
      }                      
    }    
    &:required {
      & ~ * {
        --input-label-required: " *";
      }
    }
    &:disabled {
      --input-color: var(--c-text-disabled);
      /* add to provide color on iOS */
      -webkit-text-fill-color: var(--c-text-disabled);
      & ~ * {
        --icon-color: var(--text-disabled);
        --input-label-color: var(--c-text-disabled);
      }
    }
    &[type="number"] {
      &::-webkit-inner-spin-button,
      &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
      -moz-appearance: textfield;
    }
    &[type="search"] {
      -webkit-appearance: none;
    }
  }
  &__password-button {
    --icon-size: 12px;
    --button-padding: 0;
    --button-background: transparent;
    position: absolute;
    top: var(--input-password-icon-top, 50%);
    right: var(--input-password-icon-right, var(--spacer-xs));
    transform: translate3d(0, -50%, 0);
    &:hover {
      --button-background: transparent;
      --button-box-shadow: none;
    }
  }
  &__password-icon {
    position: relative;
    &--hidden {
      --input-password-icon-scaleX: 1;
    }
    &::after {
      position: absolute;
      top: 50%;
      width: 100%;
      height: 1px;
      background: var(--input-password-icon-background, var(--c-black));
      transform: translate3d(0, -50%, 0) rotate(45deg)
        scaleX(var(--input-password-icon-scaleX, 0));
      transition: transform 150ms linear;
      content: "";
    }
  }
  &__icon {
    position: absolute;
    display: var(--input-icon-display, inline-block);
    --icon-width: var(--input-icon-width, var(--icon-size, 1rem));
    --icon-height: var(--input-icon-height, var(--icon-size, 1rem));
    top: var(--input-icon-top, 50%);
    left: var(--input-icon-left, var(--spacer-2xs));
    transform: translate3d(0, -50%, 0);
    transition: var(
      --input-icon-transition,
      all 150ms linear
    );       
  }  
  &--invalid {
    --input-border-color: var(--c-danger);
    input {
      &:focus {
        & ~ * {
          --input-bar-background: var(--c-danger);
          --input-label-color: var(--c-danger);
        }
      }
    }
  }
  &--has-text,
  input[type="date"] ~ *,
  input[type="time"] ~ *,
  input[type="image"] ~ *,
  input[type="file"] ~ * {
    --input-label-top: 0;    
    --input-label-font-size: var(--font-xs);
    --input-icon-top: 4px;
    --input-icon-left: 0;
    .sf-input__label--has-icon {
      --input-label-padding: 0 0 0 var(--spacer-sm);
    }    
    .sf-icon {
      --icon-size: 12px;
    }
  }
  &--filled {
    --input-background: var(--c-light);
    --input-font-size: var(--font-xs);
    --input-padding: var(--spacer-xs);
    --input-label-padding: 0;
    --input-label-left: var(--spacer-xs);
    --input-label-font-size: var(--font-xs);
    --input-label-color: var(--c-secondary-variant);
    --input-label-transition: color 150ms ease;
    &.sf-input--has-text {
      --input-label-display: none;
    }
    .sf-input__icon {
      --input-icon-display: none;
    }
    input {      
      &:focus {
        & ~ * {
          --input-bar-width: unset;
          --input-label-display: none;
        }
      }      
    }
  }
  &--outline {
    --input-label-left: var(--spacer-sm);
    --input-padding: var(--spacer-xs) var(--spacer-xs) var(--spacer-xs) var(--spacer-sm);
    --input-border-color: var(--c-secondary-variant);
    --input-label-background: var(--c-white);
    --input-label-font-size: var(--font-base);
    &.sf-input {
      &--has-text {
        --input-label-top: -25%;
        --input-label-left: var(--spacer-xs);
        --input-label-padding: 0 var(--spacer-2xs);
      }
      &--invalid {
        --input-border-color: var(--c-danger);
        --input-label-color: var(--c-danger);
        input {
          &:focus {
            & ~ * {
              --input-label-color: var(--c-danger);
            }
          }
        }
      }
    }
    input {
      --input-border-width: 1px;
      &:focus {
        & ~ * {
          --input-label-top: -25%;
          --input-label-left: var(--spacer-xs);
          --input-label-padding: 0 var(--spacer-2xs);
          --input-bar-width: 0;
          --input-label-color: var(--c-secondary-variant);
        }      
      }
    }
  }
}
